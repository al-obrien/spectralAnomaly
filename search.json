[{"path":"https://al-obrien.github.io/spectralAnomaly/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 spectralAnomaly authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Allen OBrien. Author, maintainer, copyright holder.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"OBrien (2024). spectralAnomaly: Detect Anomalies Using 'Spectral Residual' Algorithm. R package version 0.1.1, https://github.com/al-obrien/spectralAnomaly, https://al-obrien.github.io/spectralAnomaly/.","code":"@Manual{,   title = {spectralAnomaly: Detect Anomalies Using the 'Spectral Residual' Algorithm},   author = {Allen OBrien},   year = {2024},   note = {R package version 0.1.1, https://github.com/al-obrien/spectralAnomaly},   url = {https://al-obrien.github.io/spectralAnomaly/}, }"},{"path":"https://al-obrien.github.io/spectralAnomaly/index.html","id":"spectralanomaly-","dir":"","previous_headings":"","what":"Detect Anomalies Using the Spectral Residual Algorithm","title":"Detect Anomalies Using the Spectral Residual Algorithm","text":"{spectralAnomaly} package simple set tools R users detect anomalies data, time series, using ‘Spectral Residual’ method.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Detect Anomalies Using the Spectral Residual Algorithm","text":"{spectralAnomaly} can installed directly CRAN: can also install latest development version {spectralAnomaly} like :","code":"install.packages('spectralAnomaly') remotes::install_github('al-obrien/spectralAnomaly')"},{"path":"https://al-obrien.github.io/spectralAnomaly/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Detect Anomalies Using the Spectral Residual Algorithm","text":"","code":"library(spectralAnomaly)"},{"path":"https://al-obrien.github.io/spectralAnomaly/index.html","id":"create-a-noisy-time-series-with-a-modest-anomaly-threshold","dir":"","previous_headings":"Examples","what":"Create a noisy time series with a modest anomaly threshold","title":"Detect Anomalies Using the Spectral Residual Algorithm","text":"","code":"test_ts <- ts(rnorm(12*6,10,2), start=c(2009, 1), end=c(2014, 12), frequency=12) ts_scores <- anomaly_score(test_ts, score_window = 25) plot(test_ts, type = 'l') points(test_ts, col = ifelse(ts_scores > quantile(ts_scores, prob = 0.95),'red',NA), pch = 16)"},{"path":"https://al-obrien.github.io/spectralAnomaly/index.html","id":"create-a-series-with-a-step","dir":"","previous_headings":"Examples","what":"Create a series with a step","title":"Detect Anomalies Using the Spectral Residual Algorithm","text":"","code":"test_ts_step <- c(rnorm(1, 1, n=250),                   rnorm(10, 1, n=250)) ts_scores <- anomaly_score(test_ts_step, score_window = 100) plot(test_ts_step, type = 'l') points(test_ts_step, col = ifelse(ts_scores > quantile(ts_scores, prob = 0.99),'red',NA), pch = 16)"},{"path":"https://al-obrien.github.io/spectralAnomaly/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Detect Anomalies Using the Spectral Residual Algorithm","text":"Time-Series Anomaly Detection Service Microsoft ML-based Anomaly Detection Saliency Detection anomalydetector","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/anomaly_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Create anomaly score from input data — anomaly_score","title":"Create anomaly score from input data — anomaly_score","text":"Convert input numeric data, typically time series, score anomaly detection. data first extended improve detection latency, followed saliency map creation. score calculated using sliding window average point saliency map.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/anomaly_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create anomaly score from input data — anomaly_score","text":"","code":"anomaly_score(x, score_window, spec_window = 3, m = 5)"},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/anomaly_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create anomaly score from input data — anomaly_score","text":"x Numeric vector. score_window Integer value window width scoring. spec_window Positive integer value window calculate averaged log spectrum. m Integer value representing number preceding points estimation.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/anomaly_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create anomaly score from input data — anomaly_score","text":"numeric vector anomaly scores.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/anomaly_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create anomaly score from input data — anomaly_score","text":"","code":"tmp <- ts(rnorm(12*6,10,2), start=c(2009, 1), end=c(2014, 12), frequency=12) anomaly_score(tmp, score_window = 25) #>  [1] 0.00000000 0.24272361 0.61073318 0.73418467 0.22755205 0.12139816 #>  [7] 0.40476906 0.94009294 0.86562782 0.88056877 0.17290492 0.77448471 #> [13] 1.58034279 0.60920964 0.69237006 0.42053444 0.90379333 0.76281786 #> [19] 0.29958940 0.02337693 0.03193347 0.76537492 0.37071920 0.16445299 #> [25] 1.11449406 0.67657116 0.05438507 0.41490312 0.59366241 0.78204959 #> [31] 0.07960499 0.58519480 0.24879971 0.58570684 0.41326659 0.47852760 #> [37] 0.77944939 0.60549577 0.30267694 0.80931049 0.47744562 0.20387621 #> [43] 0.85849129 0.35800744 0.43299328 2.36788997 0.18353346 0.51356026 #> [49] 0.85130877 1.07104016 0.58225643 0.67263829 0.51877913 0.38509695 #> [55] 0.36310797 0.20756375 1.90543410 2.24857159 0.30184607 0.36776813 #> [61] 0.01506087 0.03185105 0.54585032 0.77898214 0.64068120 0.11190574 #> [67] 0.21556033 0.46531841 0.28448468 0.78307139 0.44902743 0.49008111"},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/anomaly_thresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply threshold to anomaly score — anomaly_thresh","title":"Apply threshold to anomaly score — anomaly_thresh","text":"helper function wraps around quantile apply threshold anomaly scores.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/anomaly_thresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply threshold to anomaly score — anomaly_thresh","text":"","code":"anomaly_thresh(x, threshold = 0.99, ...)"},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/anomaly_thresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply threshold to anomaly score — anomaly_thresh","text":"x Numeric vector anomaly scores (e.g. created anomaly_score). threshold Numeric value determine threshold flag outliers among score. ... Additional parameters passed quantile.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/anomaly_thresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply threshold to anomaly score — anomaly_thresh","text":"Logical vector referencing , , provided values outliers.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/anomaly_thresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply threshold to anomaly score — anomaly_thresh","text":"","code":"test_data <- c(1,2,3,4,5,100,5,4,3,2,1) anomaly_thresh(test_data, 0.99) #>  [1] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/saliency_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create saliency map — saliency_map","title":"Create saliency map — saliency_map","text":"Using provided numeric input, typically time series, calculate spectral residual output saliency map use anomaly detection.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/saliency_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create saliency map — saliency_map","text":"","code":"saliency_map(x, window = 3)"},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/saliency_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create saliency map — saliency_map","text":"x Numeric vector. window Positive integer value.","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/saliency_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create saliency map — saliency_map","text":"Numeric vector representing saliency map values.","code":""},{"path":[]},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/saliency_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create saliency map — saliency_map","text":"","code":"tmp <- ts(rnorm(12*6,10,2), start=c(2009, 1), end=c(2014, 12), frequency=12) saliency_map(tmp) #>  [1] 0.17820962 0.04998219 0.14734606 0.04195726 0.05419626 0.09025011 #>  [7] 0.04698366 0.06126748 0.28146914 0.08857082 0.06957702 0.09106998 #> [13] 0.14616518 0.21654390 0.42834538 0.05717600 0.05381479 0.07453537 #> [19] 0.08409618 0.07912545 0.12869038 0.01928659 0.01239211 0.24476501 #> [25] 0.10108000 0.14762770 0.18548278 0.05327635 0.05968798 0.07487918 #> [31] 0.13117531 0.06127194 0.21331859 0.06189903 0.01295846 0.03197067 #> [37] 0.05676031 0.16711633 0.03149594 0.22519413 0.04509035 0.10983407 #> [43] 0.09383526 0.32241963 0.01059297 0.28400202 0.01392448 0.07821234 #> [49] 0.28983532 0.01090048 0.13023639 0.03264660 0.01431210 0.05936900 #> [55] 0.10703167 0.04043028 0.08596642 0.06307660 0.16407794 0.16963808 #> [61] 0.04071086 0.17573814 0.09623672 0.09768271 0.13548949 0.02136751 #> [67] 0.14371377 0.02001547 0.06636280 0.19442864 0.25218126 0.06899638"},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/spectralAnomaly-package.html","id":null,"dir":"Reference","previous_headings":"","what":"spectralAnomaly: Detect Anomalies Using the 'Spectral Residual' Algorithm — spectralAnomaly-package","title":"spectralAnomaly: Detect Anomalies Using the 'Spectral Residual' Algorithm — spectralAnomaly-package","text":"Apply spectral residual algorithm data, time series, detect anomalies. Anomaly scores can used determine outliers based upon threshold fed sophisticated prediction models. Methods based upon \"Time-Series Anomaly Detection Service Microsoft\", Ren, H., Xu, B., Wang, Y., et al., (2019) doi:10.48550/arXiv.1906.03821 .","code":""},{"path":[]},{"path":"https://al-obrien.github.io/spectralAnomaly/reference/spectralAnomaly-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"spectralAnomaly: Detect Anomalies Using the 'Spectral Residual' Algorithm — spectralAnomaly-package","text":"Maintainer: Allen OBrien allen.g.obrien@gmail.com [copyright holder]","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/news/index.html","id":"spectralanomaly-011","dir":"Changelog","previous_headings":"","what":"spectralAnomaly 0.1.1","title":"spectralAnomaly 0.1.1","text":"DESCRIPTION file corrections","code":""},{"path":"https://al-obrien.github.io/spectralAnomaly/news/index.html","id":"spectralanomaly-010","dir":"Changelog","previous_headings":"","what":"spectralAnomaly 0.1.0","title":"spectralAnomaly 0.1.0","text":"Initial CRAN submission.","code":""}]
